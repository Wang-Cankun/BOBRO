// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// calc_similarity_kmer
NumericVector calc_similarity_kmer(CharacterVector x, int k, int total_kmer);
RcppExport SEXP _Bobro_calc_similarity_kmer(SEXP xSEXP, SEXP kSEXP, SEXP total_kmerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type total_kmer(total_kmerSEXP);
    rcpp_result_gen = Rcpp::wrap(calc_similarity_kmer(x, k, total_kmer));
    return rcpp_result_gen;
END_RCPP
}
// calc2
NumericVector calc2(CharacterVector x, int k, int total_kmer);
RcppExport SEXP _Bobro_calc2(SEXP xSEXP, SEXP kSEXP, SEXP total_kmerSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< CharacterVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    Rcpp::traits::input_parameter< int >::type total_kmer(total_kmerSEXP);
    rcpp_result_gen = Rcpp::wrap(calc2(x, k, total_kmer));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_Bobro_calc_similarity_kmer", (DL_FUNC) &_Bobro_calc_similarity_kmer, 3},
    {"_Bobro_calc2", (DL_FUNC) &_Bobro_calc2, 3},
    {NULL, NULL, 0}
};

RcppExport void R_init_Bobro(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
